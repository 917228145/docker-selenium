# Specify the path to a Compose file. If not provided, Compose looks for a
# file named docker-compose.yml in the current directory and then each
# parent directory in succession until a file by that name is found.
#  https://docs.docker.com/compose/reference/envvars/#compose-file
export COMPOSE_FILE ?= docker-compose.yml

# We prefer Real VNC client because it allows the
# -Scaling % option
export VNC_CLIENT_NAME ?= RealVNC
export VNC_DOWNLOAD_BASE_URL = https://www.realvnc.com/download/file/vnc.files
export VNC_CLIENT_VERSION = 5.3.2
export VNC_CLIENT ?= vncviewer
export VNC_CLIENT_ERROR_MSG="Required VNC viewer '${VNC_CLIENT_NAME}' is not installed"
export VNC_FILE_OSX = VNC-${VNC_CLIENT_VERSION}-MacOSX-x86_64.pkg
export VNC_FILE_LINUX = VNC-${VNC_CLIENT_VERSION}-Linux-x64-DEB.tar.gz
export VNC_MD5SUM_OSX = a9b2ba07286f04dadc63db252a95b639
export VNC_MD5SUM_LINUX = 5b0da4c2d3a8f1e3db5982b9e6be2cb6
# The command we will use to check if proper VNC is installed
export VNC_CHECK_CMD = ${VNC_CLIENT} -h | grep -i '${VNC_CLIENT_NAME}' >/dev/null

# Timeouts
export WAIT_ALL_DONE ?= 40s

# Number of nodes
export chrome ?= 1
export firefox ?= 1

# To target a specific node number
# for example to VNC into it via
#  make see browser=chrome node=1
export browser ?= chrome
export node ?= 1

# If you project name is selenium and it includes two services
# `hub` and `node` then compose starts containers named
# grid_hub_1 and grid_node_1 respectively.
# It will also
#  https://docs.docker.com/compose/reference/envvars/#compose-project-name
export COMPOSE_PROJ_NAME ?= grid

# App name is the service name for the web app under test
export APP_NAME ?= mock

# We need a fixed port number to know where to connect the selenium tests
export HUB_PORT ?= 4444
export SELENIUM_HUB_PORT ?= ${HUB_PORT}
