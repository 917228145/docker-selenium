#!/usr/bin/env bash

# set -e: exit asap if a command exits with a non-zero status
# set -x: print each command right before it is executed
set -xe

echo "#==================================================================="
echo "# Scenario 1a [basic]: SETUP: Run tests right after the cont started"
echo "#==================================================================="

[ "${TRAVIS_OS_NAME}" = "osx" ] && eval "$(docker-machine env default)" || true

docker tag selenium:latest elgalu/selenium:latest

# Ensure clean env
docker rm -vf grid || true
docker rm -vf grid2 || true
docker rm -vf grid3 || true
# Some dummy log files
rm -rf **/*"conflicted copy"*.log

function get_mock_port() {
  echo $(docker inspect -f='{{(index (index .NetworkSettings.Ports "8080/tcp") 0).HostPort}}' grid_mock)
}

# Ensure the mock page loads before continuing
i=0
while true ; do
  docker rm -vf grid_mock || true
  docker run -d -t --name=grid_mock -P elgalu/google_adwords_mock
  let i=${i}+1

  MOCK_SERVER_PORT=$(get_mock_port)
  if wget --timeout=2 --tries=3 --waitretry=10 \
          "http://localhost:${MOCK_SERVER_PORT}/adwords"; then
    break
  fi

  docker logs grid_mock
  if [ ${i} -gt 3 ]; then
    echo "-- ERROR: Failed to start the Mock at $0 after 3 retries." 1>&2
    exit 3
  fi
done
docker logs grid_mock

rm adwords
export MOCK_SERVER_PORT=$(get_mock_port)

docker run --name=grid -d -e VIDEO=true \
  -e MOCK_SERVER_HOST="d.host.loc.dev" \
  -e MOCK_SERVER_PORT \
  -v /dev/shm:/dev/shm \
  selenium
  # -v /var/run/dbus:/var/run/dbus \

sleep 0.5 && docker logs grid
docker exec grid wait_all_done 40s
docker exec grid versions
docker exec grid errors || true
docker logs grid

echo "#==================================================================="
echo "# Scenario 1b [basic]: Run tests right after the container started"
echo "#==================================================================="

# set -e: exit asap if a command exits with a non-zero status
# set -x: print each command right before it is executed
set -xe

docker exec -t grid run_test
docker exec grid errors || true

echo "#==================================================================="
echo "# Scenario 1c [basic]: Test Selenium 3"
echo "#==================================================================="

docker run --name=grid3 -d -e VIDEO=true \
  -e MOCK_SERVER_HOST="d.host.loc.dev" \
  -e MOCK_SERVER_PORT \
  -e USE_SELENIUM="3" \
  -v /dev/shm:/dev/shm \
  selenium

sleep 0.5 && docker logs grid3
docker exec grid3 wait_all_done 40s
docker exec grid3 versions
docker exec grid3 errors || true
docker logs grid3
docker exec -t grid3 run_test
docker exec grid3 errors || true
docker cp grid3:/test/console.png ./images/grid3_console.png

# cleanup
docker stop grid3 || true
docker rm grid3 || true
